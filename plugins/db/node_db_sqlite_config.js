exports.dbInitSQLs = [
  [
    "Create table target_ticket (",
    "channel TEXT,",
    "username TEXT,",
    "raceType TEXT,",
    "raceDate TEXT,",
    "tktType TEXT,",
    "method TEXT,",
    "raceNo INTEGER,",
    "horseNo TEXT,",
    "percent REAL,",
    "limit1 INTEGER,",
    "limit2 INTEGER,",
    "amount1 REAL,",
    "amount2 REAL,",
    "tax REAL,",
    "total REAL,",
    "flwPct1 REAL,",
    "flwPct2 REAL,",
    "userPathName TEXT,",
    "countryName TEXT,",
    "venueName TEXT,",
		"state INTEGER,",
    "lmt DATETIME,",
    "primary key  (channel,username,raceType,raceDate,tktType,method,raceNo,horseNo,percent,limit1,limit2)",
    ")"
  ].join('\n'),
  [
    "create table card (",
    "channel TEXT,",
    "raceType TEXT,",
    "raceDate TEXT,",
    "raceNo INTEGER,",
    "countryName TEXT,",
    "venueName TEXT,",
    "startTime DATETIME,",
    "followEndTime DATETIME,",
    "state INTEGER,",
    "lmt DATETIME,",
    "primary key (channel,raceType,raceDate,raceNo)",
    ")"
  ].join('\n'),

  [
    "CREATE TABLE race_info (",
      "race_cat CHAR(3) DEFAULT ('HS'),",
      "race_type_no CHAR(5) DEFAULT ('')," ,
      " race_date CHAR(10)," ,
      " race_no INTEGER(2) DEFAULT 0," ,
      " race_number INTEGER(5) DEFAULT 0," ,
      "std_cn_vn VARCHAR(20)," ,
      "cn_name VARCHAR(25)," ,
      "vn_name VARCHAR(25)," ,
      "flw_end_time DATETIME," ,
      "remain_time INT," ,
      "lmt BIGINT," ,
      "CONSTRAINT sqlite_autoindex_race_info_1 PRIMARY KEY (race_type_no,race_number))"
  ].join('\n'),
  [
		"CREATE table target_ticket_checked (",
		"channel TEXT,",
    "username TEXT,",
    "raceType TEXT,",
    "raceDate TEXT,",
    "tktType TEXT,",
    "method TEXT,",
    "raceNo INTEGER,",
    "horseNo TEXT,",
		"checkedAmt1 REAL,",
    "checkedAmt2 REAL,",
		"checkedPct1 REAL,",
		"checkedPct2 REAL,",
		"lastFollowPct1 REAL,",
		"lastFollowPct2 REAL,",
		"primary key  (channel,username,raceType,raceDate,tktType,method,raceNo,horseNo)",
    ")"
	].join('\n'),
  [
    "Create view v_target_ticket_summary AS ",
    "select a.channel,a.username,a.raceType,a.raceDate,a.tktType,a.method,a.raceNo,a.horseNo,c.cn_name as countryName,c.vn_name as venueName,",
    "sum(a.amount1) ticketAmt1,sum(a.amount2) ticketAmt2,sum(a.amount1*a.percent)/sum(a.amount1) ticketPct1,",
    "sum(a.amount2*a.percent)/sum(a.amount2) ticketPct2 ",
    "from target_ticket a inner join race_info c ",
    "on a.raceType like (c.race_type_no || '_') ",		
    "where a.state = 0 and (c.flw_end_time >=strftime('%s', 'now', 'localtime') ",
    "or c.flw_end_time is null) ",
    "group by a.channel,a.username,a.raceType,a.raceDate,a.tktType,a.method,a.raceNo,a.horseNo"
  ].join('\n'),	
  [
    "CREATE view v_target_ticket_summary_wp AS",
    "select a.channel,a.username,c.cn_name as countryName,c.vn_name as venueName,a.raceType,a.raceDate,a.raceNo,a.horseNo,",
    "sum(case when a.method='BET' then a.amount1 else 0 end) betWinAmount,",
    "sum(case when a.method='BET' then a.amount1*a.percent else 0 end)/sum(case when a.method='BET' then a.amount1 else 0 end) betWinPercent,",
    "min(case when a.method='BET' then a.limit1 else null end) betWinLimit,",
    "sum(case when a.method='BET' then a.amount2 else 0 end) betPlcAmount,",
    "sum(case when a.method='BET' then a.amount2*a.percent else 0 end)/sum(case when a.method='BET' then a.amount2 else 0 end) betPlcPercent,",
    "min(case when a.method='BET' then a.limit2 else null end) betPlcLimit,",
    "sum(case when a.method='EAT' then a.amount1 else 0 end) eatWinAmount,",
    "sum(case when a.method='EAT' then a.amount1*a.percent else 0 end)/sum(case when a.method='EAT' then a.amount1 else 0 end) eatWinPercent,",
    "max(case when a.method='EAT' then a.limit1 else null end) eatWinLimit,",
    "sum(case when a.method='EAT' then a.amount2 else 0 end) eatPlcAmount,",
    "sum(case when a.method='EAT' then a.amount2*a.percent else 0 end)/sum(case when a.method='EAT' then a.amount2 else 0 end) eatPlcPercent,",
    "max(case when a.method='EAT' then a.limit2 else null end) eatPlcLimit",
    "from target_ticket a",
    "inner join race_info c on a.raceType like (c.race_type_no || '_') ",
    "where a.state = 0 and (c.flw_end_time >=strftime('%s', 'now', 'localtime') ",
    "or c.flw_end_time is null) ",
    " and a.tktType='W/P'",
    "group by a.channel,a.username,c.cn_name,c.vn_name,a.raceType,a.raceDate,a.raceNo,a.horseNo"
  ].join('\n'),	
  [
    "CREATE view v_target_ticket_summary_q AS",
    "select a.channel,a.username,c.cn_name as countryName,c.vn_name as venueName,a.raceType,a.raceDate,a.raceNo,a.horseNo,a.tktType,",
    "sum(case when a.method='BET' then a.amount1 else 0 end) betAmount,",
    "sum(case when a.method='BET' then a.amount1*a.percent else 0 end)/sum(case when a.method='BET' then a.amount1 else 0 end) betPercent,",
    "min(case when a.method='BET' then a.limit1 else null end) betLimit,",
    "sum(case when a.method='EAT' then a.amount1 else 0 end) eatAmount,",
    "sum(case when a.method='EAT' then a.amount1*a.percent else 0 end)/sum(case when a.method='EAT' then a.amount1 else 0 end) eatPercent,",
    "max(case when a.method='EAT' then a.limit1 else null end) eatLimit",
    "from target_ticket a",
    "inner join race_info c on a.raceType like (c.race_type_no || '_') ",
    "where a.state = 0 and (c.flw_end_time >=strftime('%s', 'now', 'localtime') ",
    "or c.flw_end_time is null) ",
    "and a.tktType in ('FC','PFT','Q','QP')",
    "group by a.channel,a.username,c.cn_name,c.vn_name,a.raceType,a.raceDate,a.raceNo,a.horseNo,a.tktType"
  ].join('\n'),
	[
		"CREATE TABLE [follow_ticket_pending] (",
		"[id] TEXT,",
		"[channel] TEXT,",
		"[username] TEXT,",
		"[race_type] TEXT,",
		"[race_date] TEXT,",
		"[tkt_type] TEXT,",
		"[method] TEXT,",
		"[race_no] INTEGER,",
		"[horse_no] TEXT,",
		"[percent] REAL,",
		"[limit1] INTEGER,",
		"[limit2] INTEGER,",
		"[amount1] REAL,",
		"[amount2] REAL,",
		"[state] INTEGER,",
		"[lmt] DATETIME,",
		"CONSTRAINT [sqlite_autoindex_follow_ticket_pending_1] PRIMARY KEY ([id]))"
	].join('\n'),
	[
		"CREATE TABLE [follow_ticket_traded] (",
		"[channel] TEXT,",
		"[username] TEXT,",
		"[race_type] TEXT,",
		"[race_date] TEXT,",
		"[tkt_type] TEXT,",
		"[method] TEXT,",
		"[race_no] INTEGER,",
		"[horse_no] TEXT,",
		"[percent] REAL,",
		"[limit1] INTEGER,",
		"[limit2] INTEGER,",
		"[amount1] REAL,",
		"[amount2] REAL,",
		"[state] INTEGER,",
		"[lmt] DATETIME,",
		"CONSTRAINT [sqlite_autoindex_follow_ticket_traded_1] PRIMARY KEY ([channel], [username], [race_type], [race_date], [tkt_type], [method], [race_no], [horse_no], [percent], [limit1], [limit2]));"	
	].join('\n'),
	[
		"CREATE TABLE [change_log] (",
		"[id] INTEGER PRIMARY KEY AUTOINCREMENT,",
		"[table_name] TEXT,",
		"[change_type] TEXT)"	
	].join('\n')
];
exports.dbList = {
  'horsetool': 'horsetool.db'
};
exports.db = 'horsetool';
exports.CONNECTION_POOL_SIZE = 1;
